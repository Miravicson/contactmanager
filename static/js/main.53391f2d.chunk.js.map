{"version":3,"sources":["context.js","components/contact/Contact.js","components/contact/Contacts.js","components/layout/TextInputGroup.js","components/contact/EditContact.js","components/layout/Header.js","components/contact/AddContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","defaultState","name","phone","email","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","t0","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","deleteContact","delete","_this2","_this$props$contact","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contact_Contact","TextInputGroup","_ref","placeholder","onChange","label","error","htmlFor","classnames","is-invalid","defaultProps","EditContact","errors","onSubmit","e","_this$state","updatedContact","preventDefault","abrupt","match","params","put","history","push","defineProperty","target","console","log","_this$state2","reactstrap_es","layout_TextInputGroup","Header","branding","href","AddContact","newContact","post","About","NotFound","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53391f2d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map( contact => (contact.id === action.payload.id) ?  action.payload : contact)\n\n      };\n    default:\n      return state;\n  }\n};\n\nconst defaultState = [\n  {\n    name: \"Victor Ughonu\", \n    phone: \"08165660498\",\n    email: \"victorughonu@gmail.com\",\n    id: 1\n  },\n  {\n    name: \"Chiagozie Ughonu\", \n    phone: \"08165660498\",\n    email: \"victorughonu@gmail.com\",\n    id: 1\n  },\n  {\n    name: \"Miracle Ughonu\", \n    phone: \"08165660498\",\n    email: \"victorughonu@gmail.com\",\n    id: 1\n  }\n]\n\nexport class Provider extends Component {\n  state = {\n    contacts : [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n      this.setState({ contacts: response.data });\n    } catch (e) {\n      this.setState({ contacts: defaultState })\n    }\n    \n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  deleteContact = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\n  };\n\n  render() {\n    const { name, email, phone, id } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  className=\"fas fa-sort-down mx-1\"\n                  onClick={() => {\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    });\n                  }}\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.deleteContact.bind(this, id, dispatch)}\n                />\n                \n                <Link to={`/contact/edit/${id}`}>\n                  <i className=\"fas fa-pencil-alt\" style={{ cursor: 'pointer', float: 'right', marginRight: '1rem', color: 'black' }} />\n                  </Link>\n              \n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\"> Email: {email} </li>\n                  <li className=\"list-group-item\"> Phone: {phone} </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\"> <span className=\"text-danger\">Contact</span> List</h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          )\n          }}\n        </Consumer>\n    );\n  }\n}\nexport default Contacts;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = ({\n  type,\n  name,\n  placeholder,\n  onChange,\n  value,\n  label,\n  error\n}) => {\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor=\"name\">{label}</label>\n        <input\n          type={type}\n          name={name}\n          id={name}\n          className={classnames('form-control form-control-lg', {\n            'is-invalid': error\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        <div className=\"invalid-feedback\">\n          {error && <p>{error}</p>}\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n}\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n}\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Form } from 'reactstrap';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n  \n  async componentDidMount(){\n    const { id } = this.props.match.params;\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}/`);\n    const contact = response.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    })\n    console.log(this.state);\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, phone, email } = this.state;\n    if (name === '') {\n      this.setState({ errors: { name: \"Name field is required\" } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: \"Email Field is required\" } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: \"Phone Field is required\" } })\n      return;\n    }\n\n    const { id } = this.props.match.params;\n    const updatedContact = {\n      name,\n      email,\n      phone\n    }\n    const response = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}/`, updatedContact);\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: response.data })\n\n    this.props.history.push('/');\n  };\n\n  \n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div>\n              <h1 className=\"display-4 mb2\"> Edit <span className='text-danger'>Contact {this.props.match.params.id}</span></h1>\n              <Card className=\"mb-3\">\n                <CardHeader>Edit Contact</CardHeader>\n                <CardBody>\n                  <Form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup\n                      name=\"name\"\n                      placeholder=\"Enter Name...\"\n                      label=\"Name\"\n                      value={name}\n                      onChange={this.onChange.bind(this)}\n                      error={errors.name}\n                    />\n                    <TextInputGroup\n                      name=\"email\"\n                      placeholder=\"Enter Email...\"\n                      label=\"Email\"\n                      value={email}\n                      type=\"email\"\n                      onChange={this.onChange.bind(this)}\n                      error={errors.email}\n                    />\n                    <TextInputGroup\n                      name=\"phone\"\n                      placeholder=\"Enter Phone...\"\n                      label=\"Phone\"\n                      value={phone}\n                      onChange={this.onChange.bind(this)}\n                      error={errors.phone}\n                    />\n                    <input\n                      type=\"submit\"\n                      value=\"Update Contact\"\n                      className=\"btn btn-block btn-light\"\n                    />\n                  </Form>\n                </CardBody>\n              </Card>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-dark bg-danger navbar-expand-sm mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item \">\n              <Link to=\"/contact/add/\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item \">\n              <Link to=\"/about/\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\nexport default Header;\n","import React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Form } from 'reactstrap';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, phone, email } = this.state;\n    if (name === '') {\n      this.setState({ errors: { name: \"Name field is required\" } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: \"Email Field is required\" } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({errors: { phone: \"Phone Field is required\"}})\n      return;\n    }\n    const newContact = {\n      name,\n      phone,\n      email\n    }\n    const response = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n    dispatch({ type: 'ADD_CONTACT', payload: response.data });\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n\n    })\n    \n    this.props.history.push('/');\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div>\n              <h1 className=\"display-4 mb2\"> Add <span className='text-danger'>Contact</span></h1>\n              <Card className=\"mb-3\">\n                <CardHeader>Add Contacts</CardHeader>\n                <CardBody>\n                  <Form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup\n                      name=\"name\"\n                      placeholder=\"Enter Name...\"\n                      label=\"Name\"\n                      value={name}\n                      onChange={this.onChange.bind(this)}\n                      error={errors.name}\n                    />\n                    <TextInputGroup\n                      name=\"email\"\n                      placeholder=\"Enter Email...\"\n                      label=\"Email\"\n                      value={email}\n                      type=\"email\"\n                      onChange={this.onChange.bind(this)}\n                      error={errors.email}\n                    />\n                    <TextInputGroup\n                      name=\"phone\"\n                      placeholder=\"Enter Phone...\"\n                      label=\"Phone\"\n                      value={phone}\n                      onChange={this.onChange.bind(this)}\n                      error={errors.phone}\n                    />  \n                    <input\n                      type=\"submit\"\n                      value=\"Create Contact\"\n                      className=\"btn btn-block btn-light\"\n                    />\n                  </Form>\n                </CardBody>\n              </Card>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">A simple application to manage your contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\n\nconst NotFound = (props) => {\n  return (\n    <div>\n      <h1 className=\"display-4 mb-2\"><span className='text-danger'>404</span> Not Found</h1>\n      <p className=\"lead display-6\">Sorry our programmers did not create this page.</p>\n      <p className=\"lead display-6\">Try visiting a page that actually exists.</p>\n    </div>\n  )\n}\n\nexport default NotFound\n","import React, { Component } from 'react';\nimport Contacts from './components/contact/Contacts';\nimport EditContact from './components/contact/EditContact';\nimport Header from './components/layout/Header';\nimport { Provider } from './context';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\nimport AddContact from './components/contact/AddContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add/\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id/\" component={EditContact} />\n                <Route exact path=\"/about/\" component={About} />\n                <Route   component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}